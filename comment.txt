Під час підключення статичних ресурсів, зокрема файлу main.css була проблема. Стилі не підчиплялися. У підпапці students/templates/students створив static/css , куди і переніс усі стилі, зокрема main.css. Але всеодно аплікація не бачила їх. Коли навіть напряму хотів відкрити  main.css, http://127.0.0.1:8000/static/css/main.css, писало: 
Page not found (404)
Request Method: 	GET
Request URL: 	http://127.0.0.1:8000/static/css/main.css

'css/main.css' could not be found

You're seeing this error because you have DEBUG = True in your Django settings file. Change that to False, and Django will display a standard 404 page.


Тоді у settings.py прописав:

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'students', 'static'),
)

під
STATIC_URL = '/static/'

Це не допомогло. Тож у файлі urls.py підключив:

from django.contrib.staticfiles.urls import staticfiles_urlpatterns

і прописав:

urlpatterns += staticfiles_urlpatterns()

в кінці файлу.
Це не допомогло. Тоді в пошуковому рядкув вів:

django 1.7 static files

і знайшов цей сайт:

https://docs.djangoproject.com/en/1.7/howto/static-files/

в якому розписано як підключати статику і знайшов, що у settings.py треба змінити дещо:

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)


Стилі підключились і відкрився файл за адресою:

http://127.0.0.1:8000/static/css/main.css

______________________________________________________________________________
Тег static:
Дозволяє міняти частину URL в шляхах до статичнич ресурсів.
в students_list.html додали в гору {% load static from staticfiles %}
і статичні стилі переробили так <link rel="stylesheet" href="{% static "css/main.css" %}" />.
Тепер у файлі settings.py можемо міняти STATIC_URL = '/static/' на STATIC_URL = '/static1/' і зможемо достукатись до стилів як за адресою:

http://127.0.0.1:8000/static1/css/main.css

так і за

http://127.0.0.1:8000/static/css/main.css
Але мабудь нам не треба два різних посилання на один файл?

Цікаво, що на 127.0.0.1:8000/static1/img/c.jpg відкривається зображення, а на 127.0.0.1:8000/static/img/c.jpg - ні. Чому ж у випадку main.css працюють обидва варіанти? І для http://127.0.0.1:8000/static1/css/groups.css працює лише цей варіант!
Після кількох хвилин посилання http://127.0.0.1:8000/static/css/main.css перестало працювати, а http://127.0.0.1:8000/static1/css/main.css - працює. Все стало на свої місця!

Переробив усі посилання на зображення через тег static!

____________________________________________________________________________________
Динамізуємо список студентів

У файл views.py внесли зміни, у функції:
def students_list(request):

створили котеж students, в якому містяться дані про судентів у формі словників.

Далі у файлі students_list.html замінюємо дані про студентів на данні із кортежу students!
Ми користуємось тегом  for - {% for student in students %}, щоб перебирати наш кортеж. Таком чином частину коду видаляю, бо цикл повторює операцію 3 рази, бо ми маємо три елементи у кортежі.

Закодуємо зміни у репозиторі. Користуємось командами “git status” та “git
diff” перед кожним комітом.

git commit -a -m 'add static resources and data from views.py' - це лише додасть до репозиторію зміни в існуючі файли, що є в ньому. А якщо файл створений наново, то треба його додати до репозиторію - git add comment.txt students/templates/students/static/
(тут додали файл і папку).

___________________________________________________________________________
Реалізуємо закладку Групи

Створили файл base.html  і скопіювали весь вміст із students_list.html, перероблюємо base.html з використанням наслідування. Лишаємо те, що буде на кожній сторінці, а решту загортаєм в теги block, не забуваємо на початку файлу вказати тег extends( у дочірньому файлі ). Також для використання тегу for підключаємо {% load static from staticfiles %} в базовий і дочірній файли!

Тепер реалізовую вкладку Групи:
унаслідування, динамізація лінків з допомогою тегу “url”, а статичні ресурси
коректно підключені до сторінки.

Знову помітив цікаву особливість. У файлі groups_list.html додав адресу до посилання - "/groups/add", але не працювало - в Firebug видавало "groups/groups/add". Я замінив посилання у файлі на "/add". Запрацювало. Firebug показував "/groups/add" як треба. Потім я поміняв це посилання на динамічне з викор. тегу “url” - href="{% url "groups_add" %}". Працює. Потім відлучився на пару годин. Коли знову вирішив перевірити - чи працюватиме "/groups/add", якщо його прописати у файлі - і запрацювало коректно. Отакі дива. Може треба перезапускати сервер частіше???

Звичайне коментування <!-- --> у джанго працює криво! Тому краще користатись тегом {% comment %}{% endcomment %}

Ще помітив цікавинку: У в’юшці, у функції:
def groups_list(request):
	groups = (
		{'id': 1,
		 'name': [u'МтМ-', 21],
		 'captain': u'Ячменев Олег'},
		{'id': 2,
		 'name': [u'МтМ-', 22],
		 'captain': u'Подоба Віталій'},
		{'id': 3,
		 'name': [u'МтМ-', 23],
		 'captain': u'Іванов Андрій'},
	)
	
	# return render(request, 'students/groups_list.html', {})
	return render(request, 'students/groups_list.html', {'groups': groups})
Створив додаткові списки в словниках, для показування серії групи і номеру. Так ось, у джанго треба звертатись до певного елементу через крапку. При чому не важливо, це словник чи список. Н-д. хочемо звернутись до groups[1][0], то в джанго буде 
{% for group in groups %}
	{{ group.name.0 }}
{% endfor %}

___________________________________________________________________
Процесор контесту:

корегуємо вибрану закладку навігації. В попередньому розділі я реалізував це через надання кожній вкладці: (Студенти, Відвідування, Групи) окремі блоки з різними назвами (файл base.html).
Тепер же прочитавши в книзі Віталія як треба - викотистовувати теги {% if умова %}class="acive"{% endif %}. В якості умови наводиться request.path == '/' для вкладки "Студенти". А request - процесор, що ми додали до проекту у settings.py. Але також вказали дефолтний  TEMPLATE_CONTEXT_PROCESSORS процесор. request.path - адреса де ми знаходимось.

Віталій дає на д/з використати тег url із файлу urls.py, щоби при зміні адреси не переробляти.
Так ось - довелось трохи погуглити і дійти до
http://stackoverflow.com/questions/7462398/django-template-if-tag-based-on-current-url-value
де показано як створити змінну у джанго і помістити у неї адресу через тег url.

Тепер є проміжне д/з: ми створили модуль context_processors.py, що містить функцію students_proc(request). Так треба було реалізувати ретутн словника, що містить кореневу абсолютну адресу веб-сайту. Реалізував 'my_url': 'http://' + request.get_host() + request.get_full_path() - http://127.0.0.1:8000/, але треба саме http://localhost:8000.

Знову через деякий час варіант 'my_url' запрацював!! Якась запізніла реакція...
Запрацював варіант 'my_url': 'http://' + request.get_host()

Пізніше знайшов що спосіб:
def students_proc(request):
	d = {'key.1': 'ok',
		 'key2': 'nice'}
	protocol = request.META['wsgi.url_scheme']

	return {'PORTAL_URL': 'http://' + request.get_host(), 'my_url': request.META,
			'PORTAL_URL2': protocol + '://' + request.get_host()}

__________________________________________________________
Реорганізація в’юшок

у директорії data/work/virtualenvs/studDb/src/studDb/students/
створюємо папку views  і переносимо в них в’юшки із views.py

Переніс. У файлі urls.py змінив адреси з students.views.students_list на students.views.students(groups).students_list та інші відповідно. Але не працює. Пише, що не бачить No module named views.
Думаю знову гальмує щось...
Питання вирішено - на форумі побачив допис, що у папку views треба скопіювати файл __init__.py для того щоб папку можна було перетворити у Патон пакет. Це також було написано в книзі, але я не зрозумів для чого!

-----------------------
Д/З
*Огорнути лого, меню груп та футер, щоб можно було редагувати їх у кінцевому шаблоні, а якщо не редагуєш, то воно повинно бути у кінц. док.

Це реалізував просто огортанням потрібник елементів у теги {% block %}

*переведіть вашу закладку “Відвідування”, яку ви зверстали у попередній
главі на Django шаблон використовуючи усі наробки даної глави;

Зробив.

*спробуйте розібратись із директивою includes в шаблонах Django і ви-
нести pagination в окремий шаблон, щоб уникати дублювання даного
навігаційного елементу в списку груп і в списку студентів.

Власне знайшов таке:
http://rtfm.co.ua/django-book-zagruzka-shablonov/
http://djbook.ru/ch04s06.html

Була трудність, пов’язана з адресою винесеного блоку pagination у файл "includes/nav.html". Треба було вказати "students/includes.nav.html".

Та і не дуже зрозуміло, чому ми не винесли цю панель у base.html?

